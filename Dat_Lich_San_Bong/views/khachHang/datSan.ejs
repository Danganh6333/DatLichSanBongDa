<div class="header">
    <button class="header-btn">Đổi Lịch Nhanh</button>
    <select class="header-dropdown">
        <% sanBongs.forEach(sanBong=> { %>
            <option value="<%= sanBong._id %>">
                <%= sanBong.tenSan %>
            </option>
            <% }) %>
    </select>
    <button class="header-btn" onclick="openAppointment()">Điền Thông Tin</button>
</div>
<div class="appointments">
    <section class="notes">
        <h2>Chú Giải Trạng Thái</h2>
        <div class="status-item">
            <p>Sau thời gian cho phép đặt</p>
        </div>
        <div class="status-item">
            <p>Trạng thái mới đặt</p>
        </div>
        <div class="status-item">
            <p>Sân đã được đặt hết</p>
        </div>
        <h2>Sau Khi Thanh Toán</h2>
        <div class="status-item">
            <p>Trạng thái đang đá</p>
        </div>
        <div class="status-item">
            <p>Trạng thái Chờ nhận sân</p>
        </div>
        <div class="status-item">
            <p>Trạng thái Chờ thanh toán</p>
        </div>
        <div class="status-item">
            <p>Trạng thái Đặt nhưng không đá</p>
        </div>
    </section>
    <section class="calendars">
        <div id="calendar"></div>
    </section>
    <section class="event">
        <h2>Sự Kiện</h2>
        <table>
            <thead>
                <tr>
                    <th>Thông tin ca</th>
                    <th>Thao tác</th>
                </tr>
            </thead>
            <tbody id="event-details">
                <tr>
                    <td id="event-info">No event selected</td>
                    <td><button class="action-btn" onclick="deleteEvent()">Xóa</button></td>
                </tr>
            </tbody>
        </table>
    </section>
</div>
<div class="form-popup" id="myForm">
    <form action="" class="form-container">
        <h2 class="form-title">
            Lựa Chọn Ca
            <span class="close-icon" onclick="closeForm()">&#215;</span>
        </h2>
        <div class="caLamViec-grid">
            <% caLamViecs.forEach(element=> { %>
                <button type="button" class="caLamViec-item"
                    onclick="selectCa('<%= element._id %>', '<%= element.tenCa %>', '<%= element.gioBatDau %>', '<%= element.gioKetThuc %>', '<%= element.tongTien %>', event)">
                    <p><strong>
                            <%= element.tenCa %>
                        </strong>: <%= element.gioBatDau %> - <%= element.gioKetThuc %>
                    </p>
                    <p>Giá Tiền: <%= element.tongTien %>
                    </p>
                </button>
                <% }) %>
        </div>
        <div class="date-select">
            <label for="dateType">Chọn loại ngày:</label>
            <select id="dateType" onchange="updateDatePickerMode()">
                <option value="single">Chọn Một Ngày</option>
                <option value="range">Chọn Nhiều Ngày</option>
            </select>

            <label for="datePicker">Chọn Ngày:</label>
            <input type="text" id="datePicker" placeholder="Chọn ngày" />
        </div>

        <div class="button-group">
            <button type="button" class="btn save" onclick="saveEvent()">Lưu Ca</button>
        </div>
    </form>
</div>
<div class="form-popup" id="addAppointment">
    <form action="" class="form-container">
        <h2 class="form-title">Đặt Sân</h2>
        <table>
            <tr>
                <th>Ca</th>
                <th>Ngày</th>
                <th>Giá Sân</th>
                <th>Thao tác</th>
            </tr>
            <tr>
                <td>
                    <select class="header-dropdown">
                        <% sanBongs.forEach(sanBong=> { %>
                            <option value="<%= sanBong._id %>">
                                <%= sanBong.tenSan %>
                            </option>
                            <% }) %>
                    </select>
                </td>
                <td>
                    <input type="date" value="2017-06-01" />
                </td>
                <td>
                    <input type="number" name="" id="" placeholder="Nhập giá">
                </td>
                <td class="button-group">
                    <button>Thêm Ca</button>
                </td>
            </tr>
        </table>
        <div>

        </div>
        <div class="button-group">
            <button type="button" class="btn cancel" onclick="closeAppointment()">Đóng</button>
            <button type="button" class="btn save" onclick="">Đặt lịch và thanh toán</button>
        </div>
    </form>
</div>
<script type="text/javascript">
    let selectedDates = [];
    let selectedCa = null;
    let calendar;
    let datePicker;

    document.addEventListener('DOMContentLoaded', function () {
        const calendarEl = document.getElementById('calendar');
        calendar = new FullCalendar.Calendar(calendarEl, {
            initialView: 'dayGridMonth',
            headerToolbar: {
                left: 'prev,next today',
                center: 'title',
                right: 'dayGridMonth,timeGridWeek,timeGridDay,listWeek'
            },
            locale: 'vi',
            selectable: true,
            dateClick: handleDateClick,
            events: async function (fetchInfo, successCallback, failureCallback) {
                try {
                    const response = await fetch("/datLich/lich");
                    const data = await response.json();
                    successCallback(data);
                } catch (error) {
                    failureCallback(error);
                }
            }
        });
        calendar.render();

        initializeDatePicker("single");
    });

    function initializeDatePicker(mode) {
        datePicker = flatpickr("#datePicker", {
            locale: 'vn',
            dateFormat: "Y-m-d",
            mode: mode,
            minDate: new Date().fp_incr(1),
            onChange: function (selectedDatesArray) {
                selectedDates = selectedDatesArray;
                console.log(selectedDates, "JSJSJAJASLALASKASKLAKLSAKLS");
            },
            eventClick: displayEventDetails,
        });
    }

    function displayEventDetails(info) {
        const event = info.event;
        const eventDetailsRow = document.querySelector('#event-details');
        eventDetailsRow.innerHTML = `
        <tr>
            <td>${event.title} - ${event.start.toLocaleTimeString()} - ${event.end.toLocaleTimeString()} - ${event.start.toLocaleDateString()}</td>
            <td><button class="action-btn" onclick="deleteEvent('${event.id}')">Xóa</button></td>
        </tr>
    `;
    }

    function updateDatePickerMode() {
        const dateType = document.getElementById("dateType").value;
        const newMode = dateType === "range" ? "range" : "single";
        datePicker.destroy();
        initializeDatePicker(newMode);
    }

    function handleDateClick(info) {
        const selectedDate = new Date(info.dateStr);
        const today = new Date();
        today.setHours(0, 0, 0, 0);
        selectedDate.setHours(0, 0, 0, 0);

        if (datePicker.config.mode === "single" && selectedDate <= today) {
            alert('Ngày đã qua hoặc là ngày hiện tại, bạn không thể chọn.');
            return;
        }

        if (datePicker.config.mode === "range") {
            selectedDates = [selectedDate];
            datePicker.setDate(selectedDates, true);

            const selectedRange = datePicker.selectedDates;
            const overlappingEvents = calendar.getEvents().filter(event => {
                const eventStartDate = new Date(event.startStr);
                const eventEndDate = new Date(event.endStr);
                return selectedRange.some(selectedDate => {
                    const isOverlapping = eventStartDate <= selectedDate && eventEndDate >= selectedDate;
                    return isOverlapping;
                });
            });

            console.log('Overlapping Events:', overlappingEvents);

            if (overlappingEvents.length > 0) {
                alert('Đã có sự kiện cho ngày này trong khoảng thời gian bạn chọn!');
                return;
            }
        }

        const existingEvents = calendar.getEvents().filter(event => event.startStr.startsWith(info.dateStr));
        if (existingEvents.length > 0) {
            alert('Đã có sự kiện cho ngày này!');
            return;
        }
        document.getElementById("datePicker").value = info.dateStr;
        openForm();
    }



    function selectCa(id, tenCa, gioBatDau, gioKetThuc, tongTien, event) {
        selectedCa = { _id: id, tenCa, gioBatDau, gioKetThuc, tongTien };

        const startDate = new Date(gioBatDau);
        const endDate = new Date(gioKetThuc);

        datePicker.setDate([startDate, endDate]);

        document.querySelectorAll('.caLamViec-item').forEach(el => el.classList.remove('selected'));
        event.currentTarget.classList.add('selected');
    }

    function saveEvent() {
    if (!selectedCa) {
        alert("Vui lòng chọn một ca làm việc trước.");
        return;
    }
    if (!selectedDates || selectedDates.length === 0) {
        alert("Vui lòng chọn ngày hợp lệ.");
        return;
    }

    // Loop through each selected date to create separate events
    selectedDates.forEach(date => {
        const dateISO = date.toISOString().split('T')[0];

        // Set start and end datetime for each selected day
        const startEventDate = new Date(`${dateISO}T${selectedCa.gioBatDau}:00`);
        const endEventDate = new Date(`${dateISO}T${selectedCa.gioKetThuc}:00`);

        // Adjust for timezone offset
        startEventDate.setMinutes(startEventDate.getMinutes() - startEventDate.getTimezoneOffset() + 7 * 60);
        endEventDate.setMinutes(endEventDate.getMinutes() - endEventDate.getTimezoneOffset() + 7 * 60);

        console.log("Tên Ca: " + selectedCa.tenCa,
            "Start Event Date: " + startEventDate,
            "End Event Date: " + endEventDate,
            `${selectedCa.tongTien} VND`
        );
        calendar.addEvent({
            title: selectedCa.tenCa,
            start: startEventDate,
            end: endEventDate,
            description: `${selectedCa.tongTien} VND`,
            allDay: false
        });
    });

    closeForm();
    selectedDates = null;
}



    function deselectCaLamViec() {
        selectedCa = null;
        document.querySelectorAll('.caLamViec-item').forEach(el => el.classList.remove('selected'));
    }

    function openForm() {
        document.getElementById("myForm").style.display = "block";
    }

    function closeForm() {
        document.getElementById("myForm").style.display = "none";
        selectedDates = [];

    }

    function openAppointment() {
        closeAllPopups();
        document.getElementById("addAppointment").style.display = "block";
    }

    function closeAllPopups() {
        closeForm();
        closeAppointment();
    }

    function closeAppointment() {
        document.getElementById("addAppointment").style.display = "none";
        deselectCaLamViec()
    }
</script>